[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dev-template-python"
version = "0.1.0"
description = "Minimal Python project template"
authors = [{name = "Your Team", email = "team@example.com"}]
readme = "README.md"
requires-python = ">=3.10,<3.11"
license = {text = "MIT"}
dependencies = [
  "rich>=13",
  "pydantic-settings>=2",
  "typer[all]>=0.12",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.5.5",
  "mypy>=1.11.0",
  "pytest>=8.3.2",
  "pre-commit>=3.8.0",
  "detect-secrets>=1.5",
  "bandit>=1.7",
  "safety>=3.0",
  "import-linter>=2.2",
  "pytest-cov>=5.0.0",
  "uv>=0.2",
]

[project.scripts]
dev-template = "core.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "B", "PERF", "RUF"]

[tool.ruff.lint.isort]
known-first-party = ["core", "domain", "shared", "utils"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
disallow_untyped_defs = true
ignore_missing_imports = true
mypy_path = ["src"]
exclude = ["src/dev_template_python.egg-info/"]
namespace_packages = true
explicit_package_bases = true

[tool.importlinter]
root_package = "src"

[[tool.importlinter.contracts]]
name = "Domain layer should not depend on core or shared"
type = "forbidden"
source_modules = [
    "src.domain",
]
forbidden_modules = [
    "src.core",
    "src.shared",
]

[[tool.importlinter.contracts]]
name = "Core layer should use shared instead of utils directly"
type = "forbidden"
source_modules = [
    "src.core",
]
forbidden_modules = [
    "src.utils",
]

[[tool.importlinter.contracts]]
name = "Shared layer should not depend on core or domain"
type = "forbidden"
source_modules = [
    "src.shared",
]
forbidden_modules = [
    "src.core",
    "src.domain",
]

[[tool.importlinter.contracts]]
name = "Utils layer should be independent"
type = "forbidden"
source_modules = [
    "src.utils",
]
forbidden_modules = [
    "src.core",
    "src.domain",
    "src.shared",
    "src.config",
    "src.pipelines",
]

[[tool.importlinter.contracts]]
name = "Config layer should be independent"
type = "forbidden"
source_modules = [
    "src.config",
]
forbidden_modules = [
    "src.core",
    "src.domain",
    "src.shared",
    "src.utils",
    "src.pipelines",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-q --strict-markers --disable-warnings --cov=src --cov-report=xml --cov-report=term"
testpaths = [
    "tests",
]
pythonpath = ["src"]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used test
